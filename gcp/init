#!/bin/bash -e

usage() {
  cat <<EOF
GCP access parameters:
      --gcp-project-id               ARG    Override GCP project ID
      --gcp-application-credentials  ARG    Path to the google application credentials file (see: https://cloud.google.com/docs/authentication/getting-started, can be also defined via GOOGLE_APPLICATION_CREDENTIALS)
EOF
}

contains() {
  local pattern result
  pattern="$1"
  shift
  for w in $@; do
    if test "$w" = "$pattern"; then
      result="$w"
      break
    fi
  done
  test -n "$result"
}

ident() {
  sed 's/^/  /'
}

while [ "$1" != "" ]; do
  case $1 in
  --defaults)
    INTERACTIVE=false
    ;;
  --gcp-project-id)
    shift
    GCP_PROJECT_ID="$1"
    INTERACTIVE=false
    ;;
  --gcp-application-credentials)
    shift
    GOOGLE_APPLICATION_CREDENTIALS="$1"
    ;;
  -h | --help)
    usage
    exit 0
    ;;
  esac
  shift
done

if test "$VERBOSE" = "true"; then
  set -x
fi
dotenv="dotenv -f $DOT_ENV"

echo "Setting up access"
if test -n "$GCP_PROJECT_ID"; then
  echo "* Setting GCP project ID: defined via GCP_PROJECT_ID"
else
  echo "* Setting GCP project ID"
  gcloud_result="$(gcloud config list --format="json" | jq -cMr '.core.project | select(.)')"
  if ! $INTERACTIVE; then
    GCP_PROJECT_ID="$gcloud_result"
  elif test -z "$gcloud_result"; then
    read -rp "  Enter value: " GCP_PROJECT_ID
  elif test "$gcloud_result" = "$(echo "$gcloud_result" | cut -c1-31)"; then
    read -rp "  Enter value ($gcloud_result #gcloud): " GCP_PROJECT_ID
  else
    read -rp "  Enter value ($(echo "$gcloud_result" | cut -c1-31)... #gcloud): " GCP_PROJECT_ID
  fi

  if test -z "$GCP_PROJECT_ID"; then
    GCP_PROJECT_ID="$gcloud_result"
  fi
fi

if test -z "$GCP_PROJECT_ID"; then
  cat << EOF

Abort due: project ID has not been defined
To correct this error run again:
  $HUB_EXTENSION

EOF
  exit 2
fi

active_projects="$(gcloud projects list --format='json' | jq -cMr '[.[]][] | select(.lifecycleState == "ACTIVE").projectId | select(.)')"
if ! contains "$GCP_PROJECT_ID" "$active_projects"; then
    cat <<EOF | ident
Warning: entered GCP project ID has not been listed in active projects.
This may be a simiple typo or intentionally

List of active projects:
$active_projects

Entered value: $GCP_PROJECT_ID
EOF
fi

$dotenv set "GCP_PROJECT_ID=\"$GCP_PROJECT_ID\""

if test -z "$GOOGLE_APPLICATION_CREDENTIALS"; then
  CREDS="$HOME/.config/gcloud/application_default_credentials.json"
  if curl -H "Metadata-Flavor: Google" "http://metadata.google.internal" -i >/dev/null 2>&1; then
    echo "* The Hub CLI runs inside a Google Cloud environment using Environment-provided service account to talk to GCP"
  elif test -f "$CREDS"; then
    echo "* $CREDS file exists"
    echo "  ADC (Application Default Credentials) will be used to authenticate requests to GCP"
  else
    echo "* Since GOOGLE_APPLICATION_CREDENTIALS is not provided"
    echo "  trying ADC (Application Default Credentials) to authenticate"
    echo "  please give consent in the browser"
    if gcloud auth application-default login >/dev/null 2>&1; then
      echo "* Consent has been given. $CREDS created"
    else
      echo "gcloud auth application-default login command failed"
      exit 1
    fi
  fi
else
  echo "* Using application credentials: $GOOGLE_APPLICATION_CREDENTIALS"
  $dotenv set "GOOGLE_APPLICATION_CREDENTIALS=\"$GOOGLE_APPLICATION_CREDENTIALS\""
fi
