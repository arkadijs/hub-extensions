#!/bin/bash -e
# shellcheck disable=SC2086,SC2064,SC2046

HUB_HOME="${HUB_HOME:-$(dirname "$0")}"
HUB_WORKDIR="${HUB_WORKDIR:-$(pwd)}"
HUB_EXTENSION="$(basename "$0" | sed 's/-/ /g')"
PATH="$HUB_HOME:$HUB_HOME/bin:$HUB_WORKDIR:$HUB_WORKDIR/bin:$PATH"
export PATH

usage() {
cat << EOF
Kubernetes parameters:
  --kubeconfig            Path to the kubeconfig. If not specified then use kubectl's default
  --kubecontext           Name of Kubernetes context in Kubeconfig file
                          "_" reserved for "current context"
  --current-kubecontext   Use current kubecontext (this is the default)

Use: hub configure [--kubecontext _] or [--current-kubecontext] for current kubecontext

EOF
}

KUBECONTEXT="_"
DOT_ENV=${DOT_ENV:-".env"}
while [ "$1" != "" ]; do
  case "$1" in
    --kubeconfig )
      shift
      KUBECONFIG="$1"
      ;;
    --kubecontext )
      shift
      KUBECONTEXT="$1"
      ;;
    --current-kubecontext )
      KUBECONTEXT="_"
      ;;
    -o | --output )
      shift
      DOT_ENV="$1"
      ;;
    --help )
      usage
      exit
      ;;
  esac
  shift
done

VERBOSE=${VERBOSE:-false}
if test "$VERBOSE" = "true"; then
  set -x
fi

dotenv="dotenv -f $DOT_ENV"

if test -z "$HUB_DOMAIN_NAME"; then
  HUB_DOMAIN_NAME=$($dotenv get "HUB_DOMAIN_NAME" --default "cluster.local")
fi

if test -z "$KUBECONTEXT"; then
  usage
  exit 1
fi

TEMP=$(mktemp || exit 1)
trap "rm -f $TEMP" EXIT

echo "Configuring Kubernetes"
if test -n "$HUB_KUBECONFIG" \
  && $(dirname $0)/configure-kubeconfig \
      --kubecontext "$KUBECONTEXT" \
      --domain-name "$HUB_DOMAIN_NAME" \
      --save-to "$TEMP" \
      --kubeconfig "$HUB_KUBECONFIG"; then
  : # pass
elif test -n "$KUBECONFIG" \
  && $(dirname $0)/configure-kubeconfig \
      --kubecontext "$KUBECONTEXT" \
      --domain-name "$HUB_DOMAIN_NAME" \
      --save-to "$TEMP" \
      --kubeconfig "$KUBECONFIG"; then
  : # pass
elif $(dirname $0)/configure-local-sa --save-to "$TEMP"; then
  : # pass
elif $(dirname $0)/configure-kubeconfig \
      --kubecontext "$KUBECONTEXT" \
      --domain-name "$HUB_DOMAIN_NAME" \
      --save-to "$TEMP" \
      --kubeconfig "$HOME/.kube/config"; then
  : # pass
elif $(dirname $0)/configure-kubeconfig \
      --kubecontext "$KUBECONTEXT" \
      --domain-name "$HUB_DOMAIN_NAME" \
      --save-to "$TEMP" \
      --kubeconfig "$HOME/.kubeconfig"; then
  : # pass
else
  cat << EOF

Error: cannot find kubeconfig!
EOF
  exit 3
fi

abspath() {
  if test -d "$1"; then
    (cd "$1" && pwd)
  elif test -f "$1"; then
    echo "$(cd $(dirname $1) && pwd)/$(basename $1)"
  fi
}

WORKDIR=${WORKDIR:-$(pwd)}
echo -n "* Saving kubeconfig to .hub/env/$HUB_DOMAIN_NAME.kubeconfig: "
copy "$TEMP" "$WORKDIR/.hub/env/$HUB_DOMAIN_NAME.kubeconfig"
chmod go-rw "$WORKDIR/.hub/env/$HUB_DOMAIN_NAME.kubeconfig"
DOT_ENV=${DOT_ENV:-"$WORKDIR/.env"}
cat << EOF >> $DOT_ENV
# Location of sandboxed kubeconfig
HUB_KUBECONFIG="$(abspath $WORKDIR/.hub/env/$HUB_DOMAIN_NAME.kubeconfig)"
EOF
